Index: src/DAL/db/PlaylistDAO_DB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DAL/db/PlaylistDAO_DB.java b/src/DAL/db/PlaylistDAO_DB.java
--- a/src/DAL/db/PlaylistDAO_DB.java	
+++ b/src/DAL/db/PlaylistDAO_DB.java	
@@ -11,21 +11,21 @@
 public class PlaylistDAO_DB implements IPlaylistDataAccess {
 
     private DatabaseConnector databaseConnector;
-    public PlaylistDAO_DB(){
+
+    public PlaylistDAO_DB() {
         databaseConnector = new DatabaseConnector();
     }
 
     public List<Playlist> getAllPlaylists() throws SQLServerException {
         ArrayList<Playlist> allPlaylists = new ArrayList<>();
 
-        try (Connection connection = databaseConnector.getConnection())
-        {
+        try (Connection connection = databaseConnector.getConnection()) {
             String sql = "SELECT * FROM Playlist;";
 
             Statement statement = connection.createStatement();
             ResultSet rs = statement.executeQuery(sql);
 
-            while(rs.next()) {
+            while (rs.next()) {
 
                 int id = rs.getInt("ID");
                 String title = rs.getString("Title");
@@ -40,29 +40,28 @@
     }
 
     @Override
-    public Playlist createPlaylist(int id, String title) throws Exception {
+    public Playlist createPlaylist(String title) throws Exception {
         String sql = "INSERT INTO Playlist (title)VALUES (?);";
 
-        try(Connection connection = databaseConnector.getConnection()){
+        try (Connection connection = databaseConnector.getConnection()) {
             PreparedStatement statement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
 
-            statement.setString(1,title);
+            statement.setString(1, title);
 
             statement.executeUpdate();
 
             ResultSet rs = statement.getGeneratedKeys();
             int id = 0;
 
-            if(rs.next());{
+            if (rs.next()) ;
+            {
                 id = rs.getInt(1);
             }
             Playlist playlist = new Playlist(id, title);
-        }
-        catch(SQLException exc){
+            return playlist;
+        } catch (SQLException exc) {
             exc.printStackTrace();
             throw new Exception("Could not create playlist", exc);
-
-
         }
     }
 
Index: src/DAL/IPlaylistDataAccess.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DAL/IPlaylistDataAccess.java b/src/DAL/IPlaylistDataAccess.java
--- a/src/DAL/IPlaylistDataAccess.java	
+++ b/src/DAL/IPlaylistDataAccess.java	
@@ -9,7 +9,7 @@
 
     public List<Playlist> getAllPlaylists() throws Exception;
 
-    public Playlist createPlaylist (int id, String title) throws Exception;
+    public Playlist createPlaylist (String title) throws Exception;
 
     public void updatePlaylist(Playlist playlist) throws Exception;
 
Index: src/BE/Playlist.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/BE/Playlist.java b/src/BE/Playlist.java
--- a/src/BE/Playlist.java	
+++ b/src/BE/Playlist.java	
@@ -1,6 +1,34 @@
 package BE;
 
+//constructer for Song class.
 public class Playlist {
+    private int id;
+    private String title;
+
+
     public Playlist(int id, String title) {
+        this.id = id;
+        this.title = title;
+
+    }
+
+    public int getId() {
+        return id;
     }
-}
+
+    public String getTitle() {
+        return title;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+
+    @Override
+    public String toString()
+    {
+        return id + ": " + title;
+
+    }
+}
\ No newline at end of file
