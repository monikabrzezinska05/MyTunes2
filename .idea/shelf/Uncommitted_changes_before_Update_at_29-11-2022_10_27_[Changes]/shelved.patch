Index: src/BLL/util/SongSearcher.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package BLL.util;\r\n\r\npublic class SongSearcher {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/BLL/util/SongSearcher.java b/src/BLL/util/SongSearcher.java
--- a/src/BLL/util/SongSearcher.java	(revision b545d0e3db28aa763f88b47d5716f787fb9c3ec7)
+++ b/src/BLL/util/SongSearcher.java	(date 1669713889524)
@@ -1,4 +1,25 @@
 package BLL.util;
 
+import BE.Song;
+
+import java.util.ArrayList;
+import java.util.List;
+
 public class SongSearcher {
+
+    public List<Song> search(List<Song> searchBase, String query){
+        List<Song> searchResult = new ArrayList<>();
+
+        for(Song song : searchBase){
+            if(compareSongTitles(query, song))
+            {
+                searchResult.add(song);
+            }
+        }
+        return searchResult;
+    }
+
+    private boolean compareSongTitles(String query, Song song){
+        return song.getTitle().toLowerCase().contains(query.toLowerCase());
+    }
 }
Index: src/DAL/db/SongDAO_DB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package DAL.db;\r\n\r\nimport BE.Song;\r\nimport DAL.ISongDataAccess;\r\nimport com.microsoft.sqlserver.jdbc.SQLServerException;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class SongDAO_DB implements ISongDataAccess{\r\n\r\n    private DatabaseConnector databaseConnector;\r\n    public SongDAO_DB(){\r\n        databaseConnector = new DatabaseConnector();\r\n    }\r\n\r\n    public List<Song> getAllSongs() throws SQLServerException {\r\n        ArrayList<Song> allSongs = new ArrayList<>();\r\n\r\n        try (Connection connection = databaseConnector.getConnection())\r\n        {\r\n            String sql = \"SELECT * FROM Song;\";\r\n\r\n            Statement statement = connection.createStatement();\r\n            ResultSet rs = statement.executeQuery(sql);\r\n\r\n            while(rs.next()) {\r\n\r\n                int id = rs.getInt(\"ID\");\r\n                String title = rs.getString(\"Title\");\r\n                int length = rs.getInt(\"Length\");\r\n\r\n                Song song = new Song(id, title, length);\r\n                allSongs.add(song);\r\n            }\r\n            return allSongs;\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Song createSong(String title, int length) throws Exception {\r\n        String sql = \"INSERT INTO Song (title, length)VALUES (?,?);\";\r\n\r\n        try(Connection connection = databaseConnector.getConnection()){\r\n            PreparedStatement statement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\r\n\r\n            statement.setString(1, title);\r\n            statement.setInt(2, length);\r\n\r\n            statement.executeUpdate();\r\n\r\n            ResultSet rs = statement.getGeneratedKeys();\r\n            int id = 0;\r\n\r\n            if(rs.next());{\r\n                id = rs.getInt(1);\r\n            }\r\n\r\n            Song song = new Song(id, title, length);\r\n            return song;\r\n        }\r\n        catch (SQLException exc){\r\n            exc.printStackTrace();\r\n            throw new Exception(\"Could not create song\", exc);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void updateSong(Song song) throws Exception {\r\n        try(Connection connection = databaseConnector.getConnection()){\r\n\r\n            String sql = \"UPDATE Song SET Title = ?, Artist = ?, Length = ? WHERE Id = ?;\";\r\n            PreparedStatement statement = connection.prepareStatement(sql);\r\n\r\n            statement.setString(1, song.getTitle());\r\n            statement.setString(2, song.getArtist());\r\n            statement.setInt(3, song.getLenght());\r\n\r\n            statement.executeUpdate();\r\n        }\r\n        catch(SQLException exc){\r\n            exc.printStackTrace();\r\n            throw new Exception(\"Could not update song\", exc);\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void deleteSong(Song song) throws Exception {\r\n        try(Connection connection = databaseConnector.getConnection()){\r\n\r\n            String sql = \"DELETE FROM Song WHERE id = ?;\";\r\n            PreparedStatement statement = connection.prepareStatement(sql);\r\n\r\n            statement.setInt(1, song.getId());\r\n\r\n            statement.executeUpdate();\r\n        }\r\n        catch (SQLException exc){\r\n            exc.printStackTrace();\r\n            throw new Exception(\"Could not delete song\", exc);\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DAL/db/SongDAO_DB.java b/src/DAL/db/SongDAO_DB.java
--- a/src/DAL/db/SongDAO_DB.java	(revision b545d0e3db28aa763f88b47d5716f787fb9c3ec7)
+++ b/src/DAL/db/SongDAO_DB.java	(date 1669714053289)
@@ -15,7 +15,7 @@
         databaseConnector = new DatabaseConnector();
     }
 
-    public List<Song> getAllSongs() throws SQLServerException {
+    public List<Song> getSongs() throws SQLServerException {
         ArrayList<Song> allSongs = new ArrayList<>();
 
         try (Connection connection = databaseConnector.getConnection())
@@ -41,14 +41,15 @@
     }
 
     @Override
-    public Song createSong(String title, int length) throws Exception {
-        String sql = "INSERT INTO Song (title, length)VALUES (?,?);";
+    public Song createSong(String title, String artist, int length) throws Exception {
+        String sql = "INSERT INTO Song (title, length)VALUES (?,?,?);";
 
         try(Connection connection = databaseConnector.getConnection()){
             PreparedStatement statement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
 
             statement.setString(1, title);
-            statement.setInt(2, length);
+            statement.setString(2, artist);
+            statement.setInt(3, length);
 
             statement.executeUpdate();
 
Index: src/DAL/ISongDataAccess.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package DAL;\r\n\r\nimport BE.Song;\r\nimport com.microsoft.sqlserver.jdbc.SQLServerException;\r\n\r\nimport java.sql.SQLException;\r\nimport java.util.List;\r\n\r\npublic interface ISongDataAccess {\r\n    public List<Song> getAllSongs() throws SQLServerException;\r\n\r\n    public Song createSong(String title, int length) throws Exception;\r\n\r\n    public void updateSong(Song song) throws Exception;\r\n\r\n    public void deleteSong(Song song) throws Exception;\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DAL/ISongDataAccess.java b/src/DAL/ISongDataAccess.java
--- a/src/DAL/ISongDataAccess.java	(revision b545d0e3db28aa763f88b47d5716f787fb9c3ec7)
+++ b/src/DAL/ISongDataAccess.java	(date 1669714053247)
@@ -7,9 +7,9 @@
 import java.util.List;
 
 public interface ISongDataAccess {
-    public List<Song> getAllSongs() throws SQLServerException;
+    public List<Song> getSongs() throws SQLServerException;
 
-    public Song createSong(String title, int length) throws Exception;
+    public Song createSong(String title, String artist, int length) throws Exception;
 
     public void updateSong(Song song) throws Exception;
 
Index: src/BLL/SongManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package BLL;\r\n\r\nimport BE.Song;\r\nimport BLL.util.SongSearcher;\r\nimport DAL.ISongDataAccess;\r\nimport DAL.SongDAO;\r\nimport DAL.db.SongDAO_DB;\r\npublic class SongManager {\r\n    private SongSearcher ss = new SongSearcher();\r\n\r\n    private ISongDataAccess songDAO;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/BLL/SongManager.java b/src/BLL/SongManager.java
--- a/src/BLL/SongManager.java	(revision b545d0e3db28aa763f88b47d5716f787fb9c3ec7)
+++ b/src/BLL/SongManager.java	(date 1669714053270)
@@ -5,8 +5,34 @@
 import DAL.ISongDataAccess;
 import DAL.SongDAO;
 import DAL.db.SongDAO_DB;
+
+import java.util.List;
+
 public class SongManager {
+
     private SongSearcher ss = new SongSearcher();
 
     private ISongDataAccess songDAO;
-}
+
+    public SongManager(){
+        songDAO = new SongDAO_DB();
+    }
+
+    public List<Song> getSongs() throws Exception{
+        return songDAO.getSongs();
+    }
+
+    public List<Song> search(String query) throws Exception{
+        List<Song> allSongs = getSongs();
+        List<Song> searchResult = ss.search(allSongs, query);
+        return searchResult;
+    }
+
+    public void updateSong(Song updatedSong) throws Exception {
+        songDAO.updateSong(updatedSong);
+
+    }
+        public void deleteSong(Song deletedSong) throws Exception{
+            songDAO.deleteSong(deletedSong);
+        }
+    }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"c7eae06d-a500-4b3c-a733-5a74e0eaeca9\" name=\"Changes\" comment=\"MyTunes\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/GUI/Controller/SongViewController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/GUI/Controller/SongViewController.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"FxmlFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2IAUlcR6btdM1ruUdcj5aYUPxgt\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Problems&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"c7eae06d-a500-4b3c-a733-5a74e0eaeca9\" name=\"Changes\" comment=\"\" />\r\n      <created>1669624037043</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1669624037043</updated>\r\n      <workItem from=\"1669624038431\" duration=\"592000\" />\r\n      <workItem from=\"1669624735804\" duration=\"1302000\" />\r\n      <workItem from=\"1669635607676\" duration=\"37000\" />\r\n      <workItem from=\"1669708816919\" duration=\"675000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"MyTunes\">\r\n      <created>1669624339964</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669624339964</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"MyTunes\">\r\n      <created>1669625073988</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669625073988</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"MyTunes\">\r\n      <created>1669625100757</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669625100757</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"MyTunes\">\r\n      <created>1669625192515</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669625192515</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"MyTunes\">\r\n      <created>1669625639648</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669625639648</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"MyTunes\">\r\n      <created>1669625928426</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669625928426</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"MyTunes\">\r\n      <created>1669627552271</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669627552271</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"MyTunes\">\r\n      <created>1669713690910</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669713690910</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"MyTunes\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"MyTunes\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b545d0e3db28aa763f88b47d5716f787fb9c3ec7)
+++ b/.idea/workspace.xml	(date 1669714053499)
@@ -4,8 +4,17 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="c7eae06d-a500-4b3c-a733-5a74e0eaeca9" name="Changes" comment="MyTunes">
-      <change beforePath="$PROJECT_DIR$/src/GUI/Controller/SongViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GUI/Controller/SongViewController.java" afterDir="false" />
+    <list default="true" id="c7eae06d-a500-4b3c-a733-5a74e0eaeca9" name="Changes" comment="SongSearcher and manager updated">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28_11_2022__11_52__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28_11_2022__11_52__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28_11_2022__12_29__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28_11_2022__12_29__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28_11_2022__12_39__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28_11_2022__12_39__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_11_2022__09_20__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_11_2022__09_20__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_11_2022__09_24__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_11_2022__09_24__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/BLL/SongManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/BLL/SongManager.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/BLL/util/SongSearcher.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/BLL/util/SongSearcher.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/DAL/ISongDataAccess.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DAL/ISongDataAccess.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/DAL/db/SongDAO_DB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DAL/db/SongDAO_DB.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -113,12 +122,12 @@
       <option name="project" value="LOCAL" />
       <updated>1669627552271</updated>
     </task>
-    <task id="LOCAL-00008" summary="MyTunes">
-      <created>1669713690910</created>
+    <task id="LOCAL-00008" summary="SongSearcher and manager updated">
+      <created>1669713879636</created>
       <option name="number" value="00008" />
       <option name="presentableId" value="LOCAL-00008" />
       <option name="project" value="LOCAL" />
-      <updated>1669713690910</updated>
+      <updated>1669713879636</updated>
     </task>
     <option name="localTasksCounter" value="9" />
     <servers />
@@ -139,6 +148,7 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="MyTunes" />
-    <option name="LAST_COMMIT_MESSAGE" value="MyTunes" />
+    <MESSAGE value="SongSearcher and manager updated" />
+    <option name="LAST_COMMIT_MESSAGE" value="SongSearcher and manager updated" />
   </component>
 </project>
\ No newline at end of file
