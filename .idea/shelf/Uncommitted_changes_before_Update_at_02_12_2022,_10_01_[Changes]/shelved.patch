Index: src/GUI/Controller/MyTunesViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI.Controller;\n\nimport BE.Song;\nimport GUI.Model.SongModel;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.fxml.Initializable;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.*;\nimport javafx.scene.control.cell.PropertyValueFactory;\nimport javafx.stage.Stage;\n\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.ResourceBundle;\n\npublic class MyTunesViewController extends BaseController implements Initializable {\n\n    @FXML\n    private TextField searchBar;\n\n    @FXML\n    private TextField playingSong;\n\n    @FXML\n    private TableView<Song> table;\n\n    @FXML\n    private TableColumn<Song, Integer> time;\n\n    @FXML\n    private TableColumn<Song, String> title;\n\n    @FXML\n    private TableColumn<Song, String> artist;\n\n    @FXML\n    private TableColumn<Song, String> category;\n\n    //public ListView<Songs> lstSongs;\n    //public ListView<SongsInPlaylist> lstSongsInPlaylist;\n    //public ListView<Playlists> lstPlaylists;\n\n    public Button newPlaylist;\n    public Button editPlaylist;\n    public Button deletePlaylist;\n\n    public Button deleteSongInPlaylist;\n    public Button newSong;\n    public Button editSong;\n    public Button playBtn;\n    public Button deleteSong;\n    public Button reverseBtn;\n    public Button forwardBtn;\n    public Button addSong;\n    public Slider volumeSlider;\n\n    private SongModel songModel;\n\n    public MyTunesViewController()  {\n\n        try {\n            songModel = new SongModel();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    @Override\n    public void initialize(URL url, ResourceBundle resourceBundle) {\n\n        title.setCellValueFactory(new PropertyValueFactory<Song, String>(\"title\"));\n        time.setCellValueFactory(new PropertyValueFactory<Song, Integer>(\"time\"));\n        category.setCellValueFactory(new PropertyValueFactory<Song, String>(\"category\"));\n        artist.setCellValueFactory(new PropertyValueFactory<Song, String>(\"artist\"));\n\n        table.setItems(songModel.getObservableSongs());\n    }\n\n\n    @Override\n    public void setup() {\n\n    }\n\n    public void handleNewPlaylist(ActionEvent actionEvent) throws IOException {\n        Stage stage = new Stage();\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/GUI/View/NewPlaylistView.fxml\"));\n        Parent root = loader.load();\n        stage.setScene(new Scene(root));\n        stage.setTitle(\"New Playlist\");\n        stage.show();\n    }\n\n    public void handleEditPlaylist(ActionEvent actionEvent) {\n    }\n\n    public void handleDeletePlaylist(ActionEvent actionEvent) {\n    }\n\n    public void handleDeleteSongsInPlaylist(ActionEvent actionEvent) {\n    }\n\n    public void handleNewSongs(ActionEvent actionEvent) throws IOException {\n        Stage stage = new Stage();\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/GUI/View/NewSongView.fxml\"));\n        Parent root = loader.load();\n        stage.setScene(new Scene(root));\n        stage.setTitle(\"New / Edit Song\");\n        stage.show();\n\n    }\n\n    public void handleEditSongs(ActionEvent actionEvent) {\n    }\n\n    public void handleDeleteSong(ActionEvent actionEvent) {\n    }\n\n    public void handleAddSongs(ActionEvent actionEvent) {\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GUI/Controller/MyTunesViewController.java b/src/GUI/Controller/MyTunesViewController.java
--- a/src/GUI/Controller/MyTunesViewController.java	(revision 9c26c9ba52aa48d3a1a4dbdebed8a9984e3af00f)
+++ b/src/GUI/Controller/MyTunesViewController.java	(date 1669970156472)
@@ -1,6 +1,8 @@
 package GUI.Controller;
 
+import BE.Playlist;
 import BE.Song;
+import BLL.PlaylistManager;
 import GUI.Model.SongModel;
 import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
@@ -39,7 +41,7 @@
     @FXML
     private TableColumn<Song, String> category;
 
-    //public ListView<Songs> lstSongs;
+    public ListView<Song> lstSongs;
     //public ListView<SongsInPlaylist> lstSongsInPlaylist;
     //public ListView<Playlists> lstPlaylists;
 
@@ -114,6 +116,19 @@
     }
 
     public void handleEditSongs(ActionEvent actionEvent) {
+        try {
+            Song updatedSong = lstSongs.getSelectionModel().getSelectedItem();
+
+            updatedSong.setTitle(title.getText());
+            updatedSong.setArtist(artist.getText());
+            updatedSong.setCategory(category.getText());
+            updatedSong.setTime(Integer.parseInt(time.getText()));
+
+            songModel.updateSong(updatedSong);
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
     }
 
     public void handleDeleteSong(ActionEvent actionEvent) {
@@ -121,4 +136,14 @@
 
     public void handleAddSongs(ActionEvent actionEvent) {
     }
+
+   /* public void addPlaylist(Playlist playlist) {
+        try {
+            PlaylistManager.createPlaylist(playlist.getPlayListName());
+            reloadPlaylistTable();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }*/
+
 }
Index: src/GUI/Controller/NewSongViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI.Controller;\n\nimport BE.Song;\nimport GUI.Model.PlaylistModel;\nimport GUI.Model.SongModel;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.fxml.Initializable;\nimport javafx.scene.control.*;\nimport javafx.stage.Stage;\n\nimport java.net.URL;\nimport java.util.ResourceBundle;\n\npublic class NewSongViewController extends BaseController implements Initializable {\n\n    public ListView<Song> lstSong;\n    private SongModel songModel;\n\n    @FXML\n    private Button chooseFIle;\n    @FXML\n    private Button cancelSong;\n    @FXML\n    private Button saveSong;\n    @FXML\n    private TextField txtTitle;\n    @FXML\n    private TextField txtArtist;\n    @FXML\n    private TextField txtTime;\n    @FXML\n    private TextField txtFile;\n    @FXML\n    private ComboBox<String> categoryDropdown;\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        categoryDropdown.getItems().addAll(\"Pop\", \"HipHop\", \"Jazz\", \"Rap\", \"Rock\", \"Blues\", \"EDM\",\n                \"Hard Style\", \"Metal\", \"Alternative\", \"Classic\", \"Country\", \"R&B\", \"Soul\");\n        categoryDropdown.getSelectionModel().selectFirst();\n    }\n\n        @Override\n    public void setup() {\n\n    }\n\n    public void handleCancelSong(ActionEvent actionEvent) {\n        Stage stage = (Stage) cancelSong.getScene().getWindow();\n        stage.close();\n    }\n\n\n    public void handleSaveSong(ActionEvent actionEvent) {\n\n        String title = txtTitle.getText();\n        String artist = txtArtist.getText();\n        String category = categoryDropdown.getSelectionModel().getSelectedItem();\n        int time = Integer.parseInt(txtTime.getText());\n\n        try {\n            songModel.createSong(title, artist, category, time);\n        } catch (Exception e) {\n\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GUI/Controller/NewSongViewController.java b/src/GUI/Controller/NewSongViewController.java
--- a/src/GUI/Controller/NewSongViewController.java	(revision 9c26c9ba52aa48d3a1a4dbdebed8a9984e3af00f)
+++ b/src/GUI/Controller/NewSongViewController.java	(date 1669970704502)
@@ -37,7 +37,7 @@
     @Override
     public void initialize(URL location, ResourceBundle resources) {
         categoryDropdown.getItems().addAll("Pop", "HipHop", "Jazz", "Rap", "Rock", "Blues", "EDM",
-                "Hard Style", "Metal", "Alternative", "Classic", "Country", "R&B", "Soul");
+                "Hard Style", "Metal", "Alternative", "Classic", "Country", "R&B", "Soul", "DÃ¸dstramp");
         categoryDropdown.getSelectionModel().selectFirst();
     }
 
@@ -65,4 +65,5 @@
 
         }
     }
+
 }
\ No newline at end of file
Index: src/DAL/db/SongDAO_DB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package DAL.db;\n\nimport BE.Song;\nimport DAL.ISongDataAccess;\nimport com.microsoft.sqlserver.jdbc.SQLServerException;\n\nimport java.sql.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class SongDAO_DB implements ISongDataAccess{\n\n    private DatabaseConnector databaseConnector;\n    public SongDAO_DB(){\n        databaseConnector = new DatabaseConnector();\n    }\n\n    public List<Song> getSongs() throws SQLServerException {\n        ArrayList<Song> allSongs = new ArrayList<>();\n\n        try (Connection connection = databaseConnector.getConnection())\n        {\n            String sql = \"SELECT * FROM Song;\";\n\n            Statement statement = connection.createStatement();\n            ResultSet rs = statement.executeQuery(sql);\n\n            while(rs.next()) {\n\n                int id = rs.getInt(\"ID\");\n                String title = rs.getString(\"Title\");\n                String artist = rs.getString(\"Artist\");\n                String category = rs.getString(\"Category\");\n                int time = rs.getInt(\"Time\");\n\n                Song song = new Song(id, title, artist, category, time);\n                allSongs.add(song);\n            }\n            return allSongs;\n        } catch (SQLException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    @Override\n    public Song createSong(String title, String artist, String category, int time) throws Exception {\n        String sql = \"INSERT INTO Song (title, artist, category, time)VALUES (?,?,?,?);\";\n\n        try(Connection connection = databaseConnector.getConnection()){\n            PreparedStatement statement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\n\n            statement.setString(1, title);\n            statement.setString(2, artist);\n            statement.setString(3, category);\n            statement.setInt(4, time);\n\n            statement.executeUpdate();\n\n            ResultSet rs = statement.getGeneratedKeys();\n            int id = 0;\n\n            if(rs.next());{\n                id = rs.getInt(1);\n            }\n\n            Song song = new Song(id, title, artist, category, time);\n            return song;\n        }\n        catch (SQLException exc){\n            exc.printStackTrace();\n            throw new Exception(\"Could not create song\", exc);\n\n        }\n    }\n\n\n    @Override\n    public void updateSong(Song song) throws Exception {\n        try(Connection connection = databaseConnector.getConnection()){\n\n            String sql = \"UPDATE Song SET Title = ?, Artist = ?, Category = ?, Time = ? WHERE Id = ?;\";\n            PreparedStatement statement = connection.prepareStatement(sql);\n\n            statement.setString(1, song.getTitle());\n            statement.setString(2, song.getArtist());\n            statement.setString(3,song.getCategory());\n            statement.setInt(4, song.getTime());\n\n            statement.executeUpdate();\n        }\n        catch(SQLException exc){\n            exc.printStackTrace();\n            throw new Exception(\"Could not update song\", exc);\n        }\n\n    }\n\n    @Override\n    public void deleteSong(Song song) throws Exception {\n        try(Connection connection = databaseConnector.getConnection()){\n\n            String sql = \"DELETE FROM Song WHERE id = ?;\";\n            PreparedStatement statement = connection.prepareStatement(sql);\n\n            statement.setInt(1, song.getId());\n\n            statement.executeUpdate();\n        }\n        catch (SQLException exc){\n            exc.printStackTrace();\n            throw new Exception(\"Could not delete song\", exc);\n        }\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DAL/db/SongDAO_DB.java b/src/DAL/db/SongDAO_DB.java
--- a/src/DAL/db/SongDAO_DB.java	(revision 9c26c9ba52aa48d3a1a4dbdebed8a9984e3af00f)
+++ b/src/DAL/db/SongDAO_DB.java	(date 1669971138271)
@@ -44,7 +44,7 @@
 
     @Override
     public Song createSong(String title, String artist, String category, int time) throws Exception {
-        String sql = "INSERT INTO Song (title, artist, category, time)VALUES (?,?,?,?);";
+        String sql = "INSERT INTO Song (title, artist, category, time)VALUES ?,?,?,?;";
 
         try(Connection connection = databaseConnector.getConnection()){
             PreparedStatement statement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
Index: src/GUI/Controller/NewPlaylistViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI.Controller;\n\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.fxml.Initializable;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.TextField;\nimport javafx.stage.Stage;\n\nimport java.net.URL;\nimport java.util.ResourceBundle;\n\npublic class NewPlaylistViewController extends BaseController implements Initializable {\n\n    public Button cancelPlaylist;\n    public Button savePlaylist;\n\n    @FXML\n    private TextField txtField;\n\n    @Override\n    public void setup() {\n\n    }\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n\n    }\n\n    public void handleCancelPlaylist(ActionEvent actionEvent) {\n        Stage stage = (Stage) cancelPlaylist.getScene().getWindow();\n        stage.close();\n    }\n\n    public void handleSavePlaylist(ActionEvent actionEvent) {\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GUI/Controller/NewPlaylistViewController.java b/src/GUI/Controller/NewPlaylistViewController.java
--- a/src/GUI/Controller/NewPlaylistViewController.java	(revision 9c26c9ba52aa48d3a1a4dbdebed8a9984e3af00f)
+++ b/src/GUI/Controller/NewPlaylistViewController.java	(date 1669970156483)
@@ -1,23 +1,32 @@
 package GUI.Controller;
 
+import BE.Playlist;
+import GUI.Model.PlaylistModel;
 import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
 import javafx.fxml.Initializable;
 import javafx.scene.control.Button;
+import javafx.scene.control.Label;
 import javafx.scene.control.TextField;
 import javafx.stage.Stage;
 
+import java.io.IOException;
 import java.net.URL;
 import java.util.ResourceBundle;
 
 public class NewPlaylistViewController extends BaseController implements Initializable {
 
+    public Label alertLabel;
+    private PlaylistModel playlistModel;
+
     public Button cancelPlaylist;
     public Button savePlaylist;
 
     @FXML
     private TextField txtField;
 
+    private int mode;
+
     @Override
     public void setup() {
 
@@ -25,7 +34,7 @@
 
     @Override
     public void initialize(URL location, ResourceBundle resources) {
-
+            playlistModel = new PlaylistModel();
     }
 
     public void handleCancelPlaylist(ActionEvent actionEvent) {
@@ -33,6 +42,25 @@
         stage.close();
     }
 
-    public void handleSavePlaylist(ActionEvent actionEvent) {
+    public void setMode(int i) {
+        this.mode = i;
     }
+
+    /*public void handleSavePlaylist(ActionEvent actionEvent) {
+        try {
+            if (txtField != null && !txtField.getText().isEmpty()) {
+                switch (mode) {
+                    case (1) -> {
+                        MyTunesViewController.addPlaylist(new Playlist(txtField.getText()));
+                    }
+                    case (2) -> {
+                        MyTunesViewController.editPlaylist(txtField.getText());
+                    }
+                }
+                MyTunesViewController.close();
+
+            }
+        }
+    }*/
+
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"c7eae06d-a500-4b3c-a733-5a74e0eaeca9\" name=\"Changes\" comment=\"MyTunes\">\n      <change beforePath=\"$PROJECT_DIR$/src/GUI/Controller/SongViewController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/GUI/Controller/MyTunesViewController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/GUI/View/MyTunesView.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/GUI/View/MyTunesView.fxml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n        <option value=\"FxmlFile\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2IAUlcR6btdM1ruUdcj5aYUPxgt\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"GUI.Main\" />\n      <module name=\"MyTunes2\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"GUI.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"c7eae06d-a500-4b3c-a733-5a74e0eaeca9\" name=\"Changes\" comment=\"\" />\n      <created>1669624037043</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1669624037043</updated>\n      <workItem from=\"1669624038431\" duration=\"592000\" />\n      <workItem from=\"1669624735804\" duration=\"1302000\" />\n      <workItem from=\"1669635607676\" duration=\"37000\" />\n      <workItem from=\"1669708816919\" duration=\"675000\" />\n      <workItem from=\"1669714652902\" duration=\"1087000\" />\n      <workItem from=\"1669795032695\" duration=\"188000\" />\n      <workItem from=\"1669795271938\" duration=\"2270000\" />\n      <workItem from=\"1669795257868\" duration=\"2264000\" />\n      <workItem from=\"1669881785134\" duration=\"3282000\" />\n      <workItem from=\"1669889337774\" duration=\"2269000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"MyTunes\">\n      <created>1669624339964</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669624339964</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"MyTunes\">\n      <created>1669625073988</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669625073988</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"MyTunes\">\n      <created>1669625100757</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669625100757</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"MyTunes\">\n      <created>1669625192515</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669625192515</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"MyTunes\">\n      <created>1669625639648</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669625639648</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"MyTunes\">\n      <created>1669625928426</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669625928426</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"MyTunes\">\n      <created>1669627552271</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669627552271</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"MyTunes\">\n      <created>1669714918744</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669714918744</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"HÃ¥ber det virker\">\n      <created>1669716819764</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669716819764</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"MyTunes\">\n      <created>1669889511747</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669889511747</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"MyTunes\">\n      <created>1669889517081</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669889517081</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"MyTunes\">\n      <created>1669891236137</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669891236137</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"MyTunes\">\n      <created>1669891247520</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669891247520</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"MyTunes\">\n      <created>1669891460582</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669891460582</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"15\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"HÃ¥ber det virker\" />\n    <MESSAGE value=\"MyTunes\" />\n    <MESSAGE value=\"Playlist\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Playlist\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.reflect.InvocationTargetException\" package=\"java.lang.reflect\" />\n          <option name=\"timeStamp\" value=\"1\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9c26c9ba52aa48d3a1a4dbdebed8a9984e3af00f)
+++ b/.idea/workspace.xml	(date 1669971306150)
@@ -4,9 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="c7eae06d-a500-4b3c-a733-5a74e0eaeca9" name="Changes" comment="MyTunes">
-      <change beforePath="$PROJECT_DIR$/src/GUI/Controller/SongViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GUI/Controller/MyTunesViewController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/GUI/View/MyTunesView.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/GUI/View/MyTunesView.fxml" afterDir="false" />
+    <list default="true" id="c7eae06d-a500-4b3c-a733-5a74e0eaeca9" name="Changes" comment="Playlist">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/DAL/db/SongDAO_DB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DAL/db/SongDAO_DB.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/GUI/Controller/MyTunesViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GUI/Controller/MyTunesViewController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/GUI/Controller/NewPlaylistViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GUI/Controller/NewPlaylistViewController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/GUI/Controller/NewSongViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GUI/Controller/NewSongViewController.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -190,7 +193,21 @@
       <option name="project" value="LOCAL" />
       <updated>1669891460582</updated>
     </task>
-    <option name="localTasksCounter" value="15" />
+    <task id="LOCAL-00015" summary="Playlist">
+      <created>1669893263867</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1669893263867</updated>
+    </task>
+    <task id="LOCAL-00016" summary="Playlist">
+      <created>1669893303817</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1669893303817</updated>
+    </task>
+    <option name="localTasksCounter" value="17" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
